<% if(!user) { %>
    <script>
        alert("Not Authorized : Please Login!")
        location.assign('/api/user/login')
    </script>
<% } else { %>
    <%- include('../partials/headerAdmin.ejs') %> 
    <%- include('../partials/sidebar.ejs') %>
<main>
    <section>
        <h2 style="margin-top: 30px;margin-bottom: 10px;">Jumlah Kasus Saat Ini</h2>
        <ul id="covid-case">
            <li class="box-style positif">
                <h2><%= covtCase.positif %></h2>
                <h4>Positif</h4>
            </li>
            <li class="box-style dirawat">
                <h2><%= covtCase.dirawat %></h2>
                <h4>Di Rawat</h4>
            </li>
            <li class="box-style sembuh">
                <h2><%= covtCase.sembuh %></h2>
                <h4>Sembuh</h4>
            </li>
            <li class="box-style meninggal">
                <h2><%= covtCase.meninggal %></h2>
                <h4>Meninggal</h4>
            </li>
        </ul>
    
        <h2 style="margin-top: 30px;margin-bottom: 10px;">Peta Sebaran Pasien</h2>
        <div id="map"></div>
    </section>
</main>
<script>
    document.addEventListener('DOMContentLoaded', ()=>{
        var markers = {}

        async function getPosition(){
            try{
                let res =  await fetch('/api/device/position') 
                const data = await res.json()
                
                data.forEach((obj)=>{
                    if(!markers.hasOwnProperty(obj.devid)){
                        markers[obj.devid] = new L.Marker([obj.lat, obj.long]).addTo(map);
                        var circle = L.polygon(obj.area, {
                            color: 'red',
                            weight: 1,
                            fillColor: '#f03',
                            fillOpacity: 0.14,
                            radius: 1000
                        }).addTo(map);
                        markers[obj.devid].bindPopup(`<b>${obj.devid}</b><br><button type="button" onclick="window.location.href='/api/user/maps/log?devid=${obj.devid}'">Go to</button>`)
                    }else{
                        markers[obj.devid].setLatLng([obj.lat, obj.long]);
                    }    
                })
            }catch(err){
                console.log(err)
            }
        }


        let map = L.map('map').setView([-6.385589, 106.830711],13)
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw'
            }).addTo(map);
            var myStyle = {
               "color": "red",
               "weight": 3,
               "opacity": 0.65,
               "fillOpacity": 0
            };
            var jsonTest = new L.GeoJSON.AJAX(["/depok.geojson"], {style:myStyle}).addTo(map);
            jsonTest.bindPopup("<h3>Kota : Depok</h3>")
        setInterval(getPosition, 2000)
    })
</script>
<% } %> 